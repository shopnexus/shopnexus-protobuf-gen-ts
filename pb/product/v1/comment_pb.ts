// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file product/v1/comment.proto (package product.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { PaginationRequest, PaginationResponse } from "../../common/pagination_pb";
import { file_common_pagination } from "../../common/pagination_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file product/v1/comment.proto.
 */
export const file_product_v1_comment: GenFile = /*@__PURE__*/
  fileDesc("Chhwcm9kdWN0L3YxL2NvbW1lbnQucHJvdG8SCnByb2R1Y3QudjEi4gEKDUNvbW1lbnRFbnRpdHkSCgoCaWQYASABKAMSDwoHdXNlcl9pZBgCIAEoAxIlCgR0eXBlGAMgASgOMhcucHJvZHVjdC52MS5Db21tZW50VHlwZRIPCgdkZXN0X2lkGAQgASgDEgwKBGJvZHkYBSABKAkSDgoGdXB2b3RlGAYgASgDEhAKCGRvd252b3RlGAcgASgDEg0KBXNjb3JlGAggASgFEhQKDGRhdGVfY3JlYXRlZBgJIAEoAxIUCgxkYXRlX3VwZGF0ZWQYCiABKAMSEQoJcmVzb3VyY2VzGAsgAygJIlEKEUdldENvbW1lbnRSZXF1ZXN0Eg8KAmlkGAEgASgDSACIAQESFgoJc2VyaWFsX2lkGAIgASgJSAGIAQFCBQoDX2lkQgwKCl9zZXJpYWxfaWQiPQoSR2V0Q29tbWVudFJlc3BvbnNlEicKBGRhdGEYASABKAsyGS5wcm9kdWN0LnYxLkNvbW1lbnRFbnRpdHkitQQKE0xpc3RDb21tZW50c1JlcXVlc3QSLQoKcGFnaW5hdGlvbhgBIAEoCzIZLmNvbW1vbi5QYWdpbmF0aW9uUmVxdWVzdBIUCgd1c2VyX2lkGAIgASgDSACIAQESKgoEdHlwZRgDIAEoDjIXLnByb2R1Y3QudjEuQ29tbWVudFR5cGVIAYgBARIUCgdkZXN0X2lkGAQgASgDSAKIAQESEQoEYm9keRgFIAEoCUgDiAEBEhgKC3Vwdm90ZV9mcm9tGAYgASgDSASIAQESFgoJdXB2b3RlX3RvGAcgASgDSAWIAQESGgoNZG93bnZvdGVfZnJvbRgIIAEoA0gGiAEBEhgKC2Rvd252b3RlX3RvGAkgASgDSAeIAQESFwoKc2NvcmVfZnJvbRgKIAEoA0gIiAEBEhUKCHNjb3JlX3RvGAsgASgDSAmIAQESHgoRZGF0ZV9jcmVhdGVkX2Zyb20YDCABKANICogBARIcCg9kYXRlX2NyZWF0ZWRfdG8YDSABKANIC4gBAUIKCghfdXNlcl9pZEIHCgVfdHlwZUIKCghfZGVzdF9pZEIHCgVfYm9keUIOCgxfdXB2b3RlX2Zyb21CDAoKX3Vwdm90ZV90b0IQCg5fZG93bnZvdGVfZnJvbUIOCgxfZG93bnZvdGVfdG9CDQoLX3Njb3JlX2Zyb21CCwoJX3Njb3JlX3RvQhQKEl9kYXRlX2NyZWF0ZWRfZnJvbUISChBfZGF0ZV9jcmVhdGVkX3RvIm8KFExpc3RDb21tZW50c1Jlc3BvbnNlEicKBGRhdGEYASADKAsyGS5wcm9kdWN0LnYxLkNvbW1lbnRFbnRpdHkSLgoKcGFnaW5hdGlvbhgCIAEoCzIaLmNvbW1vbi5QYWdpbmF0aW9uUmVzcG9uc2UibwoUQ3JlYXRlQ29tbWVudFJlcXVlc3QSJQoEdHlwZRgBIAEoDjIXLnByb2R1Y3QudjEuQ29tbWVudFR5cGUSDwoHZGVzdF9pZBgCIAEoAxIMCgRib2R5GAMgASgJEhEKCXJlc291cmNlcxgEIAMoCSIXChVDcmVhdGVDb21tZW50UmVzcG9uc2UiUQoUVXBkYXRlQ29tbWVudFJlcXVlc3QSCgoCaWQYASABKAMSEQoEYm9keRgCIAEoCUgAiAEBEhEKCXJlc291cmNlcxgDIAMoCUIHCgVfYm9keSIXChVVcGRhdGVDb21tZW50UmVzcG9uc2UiIgoURGVsZXRlQ29tbWVudFJlcXVlc3QSCgoCaWQYASABKAMiFwoVRGVsZXRlQ29tbWVudFJlc3BvbnNlKn0KC0NvbW1lbnRUeXBlEhwKGENPTU1FTlRfVFlQRV9VTlNQRUNJRklFRBAAEh4KGkNPTU1FTlRfVFlQRV9QUk9EVUNUX01PREVMEAESFgoSQ09NTUVOVF9UWVBFX0JSQU5EEAISGAoUQ09NTUVOVF9UWVBFX0NPTU1FTlQQA0KvAQoOY29tLnByb2R1Y3QudjFCDENvbW1lbnRQcm90b1ABWkZnaXRodWIuY29tL3Nob3BuZXh1cy9zaG9wbmV4dXMtcHJvdG9idWYtZ2VuLWdvL3BiL3Byb2R1Y3QvdjE7cHJvZHVjdHYxogIDUFhYqgIKUHJvZHVjdC5WMcoCClByb2R1Y3RcVjHiAhZQcm9kdWN0XFYxXEdQQk1ldGFkYXRh6gILUHJvZHVjdDo6VjFiBnByb3RvMw", [file_common_pagination]);

/**
 * COMMENT ENTITY
 *
 * @generated from message product.v1.CommentEntity
 */
export type CommentEntity = Message<"product.v1.CommentEntity"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: int64 user_id = 2;
   */
  userId: bigint;

  /**
   * @generated from field: product.v1.CommentType type = 3;
   */
  type: CommentType;

  /**
   * @generated from field: int64 dest_id = 4;
   */
  destId: bigint;

  /**
   * @generated from field: string body = 5;
   */
  body: string;

  /**
   * @generated from field: int64 upvote = 6;
   */
  upvote: bigint;

  /**
   * @generated from field: int64 downvote = 7;
   */
  downvote: bigint;

  /**
   * @generated from field: int32 score = 8;
   */
  score: number;

  /**
   * @generated from field: int64 date_created = 9;
   */
  dateCreated: bigint;

  /**
   * @generated from field: int64 date_updated = 10;
   */
  dateUpdated: bigint;

  /**
   * @generated from field: repeated string resources = 11;
   */
  resources: string[];
};

/**
 * Describes the message product.v1.CommentEntity.
 * Use `create(CommentEntitySchema)` to create a new message.
 */
export const CommentEntitySchema: GenMessage<CommentEntity> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 0);

/**
 * @generated from message product.v1.GetCommentRequest
 */
export type GetCommentRequest = Message<"product.v1.GetCommentRequest"> & {
  /**
   * @generated from field: optional int64 id = 1;
   */
  id?: bigint;

  /**
   * @generated from field: optional string serial_id = 2;
   */
  serialId?: string;
};

/**
 * Describes the message product.v1.GetCommentRequest.
 * Use `create(GetCommentRequestSchema)` to create a new message.
 */
export const GetCommentRequestSchema: GenMessage<GetCommentRequest> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 1);

/**
 * @generated from message product.v1.GetCommentResponse
 */
export type GetCommentResponse = Message<"product.v1.GetCommentResponse"> & {
  /**
   * @generated from field: product.v1.CommentEntity data = 1;
   */
  data?: CommentEntity;
};

/**
 * Describes the message product.v1.GetCommentResponse.
 * Use `create(GetCommentResponseSchema)` to create a new message.
 */
export const GetCommentResponseSchema: GenMessage<GetCommentResponse> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 2);

/**
 * @generated from message product.v1.ListCommentsRequest
 */
export type ListCommentsRequest = Message<"product.v1.ListCommentsRequest"> & {
  /**
   * @generated from field: common.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: optional int64 user_id = 2;
   */
  userId?: bigint;

  /**
   * @generated from field: optional product.v1.CommentType type = 3;
   */
  type?: CommentType;

  /**
   * @generated from field: optional int64 dest_id = 4;
   */
  destId?: bigint;

  /**
   * @generated from field: optional string body = 5;
   */
  body?: string;

  /**
   * @generated from field: optional int64 upvote_from = 6;
   */
  upvoteFrom?: bigint;

  /**
   * @generated from field: optional int64 upvote_to = 7;
   */
  upvoteTo?: bigint;

  /**
   * @generated from field: optional int64 downvote_from = 8;
   */
  downvoteFrom?: bigint;

  /**
   * @generated from field: optional int64 downvote_to = 9;
   */
  downvoteTo?: bigint;

  /**
   * @generated from field: optional int64 score_from = 10;
   */
  scoreFrom?: bigint;

  /**
   * @generated from field: optional int64 score_to = 11;
   */
  scoreTo?: bigint;

  /**
   * @generated from field: optional int64 date_created_from = 12;
   */
  dateCreatedFrom?: bigint;

  /**
   * @generated from field: optional int64 date_created_to = 13;
   */
  dateCreatedTo?: bigint;
};

/**
 * Describes the message product.v1.ListCommentsRequest.
 * Use `create(ListCommentsRequestSchema)` to create a new message.
 */
export const ListCommentsRequestSchema: GenMessage<ListCommentsRequest> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 3);

/**
 * @generated from message product.v1.ListCommentsResponse
 */
export type ListCommentsResponse = Message<"product.v1.ListCommentsResponse"> & {
  /**
   * @generated from field: repeated product.v1.CommentEntity data = 1;
   */
  data: CommentEntity[];

  /**
   * @generated from field: common.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message product.v1.ListCommentsResponse.
 * Use `create(ListCommentsResponseSchema)` to create a new message.
 */
export const ListCommentsResponseSchema: GenMessage<ListCommentsResponse> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 4);

/**
 * @generated from message product.v1.CreateCommentRequest
 */
export type CreateCommentRequest = Message<"product.v1.CreateCommentRequest"> & {
  /**
   * @generated from field: product.v1.CommentType type = 1;
   */
  type: CommentType;

  /**
   * @generated from field: int64 dest_id = 2;
   */
  destId: bigint;

  /**
   * @generated from field: string body = 3;
   */
  body: string;

  /**
   * @generated from field: repeated string resources = 4;
   */
  resources: string[];
};

/**
 * Describes the message product.v1.CreateCommentRequest.
 * Use `create(CreateCommentRequestSchema)` to create a new message.
 */
export const CreateCommentRequestSchema: GenMessage<CreateCommentRequest> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 5);

/**
 * @generated from message product.v1.CreateCommentResponse
 */
export type CreateCommentResponse = Message<"product.v1.CreateCommentResponse"> & {
};

/**
 * Describes the message product.v1.CreateCommentResponse.
 * Use `create(CreateCommentResponseSchema)` to create a new message.
 */
export const CreateCommentResponseSchema: GenMessage<CreateCommentResponse> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 6);

/**
 * @generated from message product.v1.UpdateCommentRequest
 */
export type UpdateCommentRequest = Message<"product.v1.UpdateCommentRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: optional string body = 2;
   */
  body?: string;

  /**
   * @generated from field: repeated string resources = 3;
   */
  resources: string[];
};

/**
 * Describes the message product.v1.UpdateCommentRequest.
 * Use `create(UpdateCommentRequestSchema)` to create a new message.
 */
export const UpdateCommentRequestSchema: GenMessage<UpdateCommentRequest> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 7);

/**
 * @generated from message product.v1.UpdateCommentResponse
 */
export type UpdateCommentResponse = Message<"product.v1.UpdateCommentResponse"> & {
};

/**
 * Describes the message product.v1.UpdateCommentResponse.
 * Use `create(UpdateCommentResponseSchema)` to create a new message.
 */
export const UpdateCommentResponseSchema: GenMessage<UpdateCommentResponse> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 8);

/**
 * @generated from message product.v1.DeleteCommentRequest
 */
export type DeleteCommentRequest = Message<"product.v1.DeleteCommentRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message product.v1.DeleteCommentRequest.
 * Use `create(DeleteCommentRequestSchema)` to create a new message.
 */
export const DeleteCommentRequestSchema: GenMessage<DeleteCommentRequest> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 9);

/**
 * @generated from message product.v1.DeleteCommentResponse
 */
export type DeleteCommentResponse = Message<"product.v1.DeleteCommentResponse"> & {
};

/**
 * Describes the message product.v1.DeleteCommentResponse.
 * Use `create(DeleteCommentResponseSchema)` to create a new message.
 */
export const DeleteCommentResponseSchema: GenMessage<DeleteCommentResponse> = /*@__PURE__*/
  messageDesc(file_product_v1_comment, 10);

/**
 * @generated from enum product.v1.CommentType
 */
export enum CommentType {
  /**
   * @generated from enum value: COMMENT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: COMMENT_TYPE_PRODUCT_MODEL = 1;
   */
  PRODUCT_MODEL = 1,

  /**
   * @generated from enum value: COMMENT_TYPE_BRAND = 2;
   */
  BRAND = 2,

  /**
   * @generated from enum value: COMMENT_TYPE_COMMENT = 3;
   */
  COMMENT = 3,
}

/**
 * Describes the enum product.v1.CommentType.
 */
export const CommentTypeSchema: GenEnum<CommentType> = /*@__PURE__*/
  enumDesc(file_product_v1_comment, 0);

