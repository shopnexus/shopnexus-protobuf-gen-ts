// @generated by protoc-gen-es v2.2.3
// @generated from file product/v1/brand.proto (package product.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { PaginationRequest, PaginationResponse } from "../../common/pagination_pb";

/**
 * Describes the file product/v1/brand.proto.
 */
export declare const file_product_v1_brand: GenFile;

/**
 * BRAND ENTITY
 *
 * @generated from message product.v1.BrandEntity
 */
export declare type BrandEntity = Message<"product.v1.BrandEntity"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;
};

/**
 * Describes the message product.v1.BrandEntity.
 * Use `create(BrandEntitySchema)` to create a new message.
 */
export declare const BrandEntitySchema: GenMessage<BrandEntity>;

/**
 * @generated from message product.v1.GetBrandRequest
 */
export declare type GetBrandRequest = Message<"product.v1.GetBrandRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message product.v1.GetBrandRequest.
 * Use `create(GetBrandRequestSchema)` to create a new message.
 */
export declare const GetBrandRequestSchema: GenMessage<GetBrandRequest>;

/**
 * @generated from message product.v1.GetBrandResponse
 */
export declare type GetBrandResponse = Message<"product.v1.GetBrandResponse"> & {
  /**
   * @generated from field: product.v1.BrandEntity data = 1;
   */
  data?: BrandEntity;
};

/**
 * Describes the message product.v1.GetBrandResponse.
 * Use `create(GetBrandResponseSchema)` to create a new message.
 */
export declare const GetBrandResponseSchema: GenMessage<GetBrandResponse>;

/**
 * @generated from message product.v1.ListBrandsRequest
 */
export declare type ListBrandsRequest = Message<"product.v1.ListBrandsRequest"> & {
  /**
   * @generated from field: common.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;
};

/**
 * Describes the message product.v1.ListBrandsRequest.
 * Use `create(ListBrandsRequestSchema)` to create a new message.
 */
export declare const ListBrandsRequestSchema: GenMessage<ListBrandsRequest>;

/**
 * @generated from message product.v1.ListBrandsResponse
 */
export declare type ListBrandsResponse = Message<"product.v1.ListBrandsResponse"> & {
  /**
   * @generated from field: repeated product.v1.BrandEntity data = 1;
   */
  data: BrandEntity[];

  /**
   * @generated from field: common.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message product.v1.ListBrandsResponse.
 * Use `create(ListBrandsResponseSchema)` to create a new message.
 */
export declare const ListBrandsResponseSchema: GenMessage<ListBrandsResponse>;

/**
 * @generated from message product.v1.CreateBrandRequest
 */
export declare type CreateBrandRequest = Message<"product.v1.CreateBrandRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message product.v1.CreateBrandRequest.
 * Use `create(CreateBrandRequestSchema)` to create a new message.
 */
export declare const CreateBrandRequestSchema: GenMessage<CreateBrandRequest>;

/**
 * @generated from message product.v1.CreateBrandResponse
 */
export declare type CreateBrandResponse = Message<"product.v1.CreateBrandResponse"> & {
  /**
   * @generated from field: product.v1.BrandEntity data = 1;
   */
  data?: BrandEntity;
};

/**
 * Describes the message product.v1.CreateBrandResponse.
 * Use `create(CreateBrandResponseSchema)` to create a new message.
 */
export declare const CreateBrandResponseSchema: GenMessage<CreateBrandResponse>;

/**
 * @generated from message product.v1.UpdateBrandRequest
 */
export declare type UpdateBrandRequest = Message<"product.v1.UpdateBrandRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;
};

/**
 * Describes the message product.v1.UpdateBrandRequest.
 * Use `create(UpdateBrandRequestSchema)` to create a new message.
 */
export declare const UpdateBrandRequestSchema: GenMessage<UpdateBrandRequest>;

/**
 * @generated from message product.v1.UpdateBrandResponse
 */
export declare type UpdateBrandResponse = Message<"product.v1.UpdateBrandResponse"> & {
};

/**
 * Describes the message product.v1.UpdateBrandResponse.
 * Use `create(UpdateBrandResponseSchema)` to create a new message.
 */
export declare const UpdateBrandResponseSchema: GenMessage<UpdateBrandResponse>;

/**
 * @generated from message product.v1.DeleteBrandRequest
 */
export declare type DeleteBrandRequest = Message<"product.v1.DeleteBrandRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message product.v1.DeleteBrandRequest.
 * Use `create(DeleteBrandRequestSchema)` to create a new message.
 */
export declare const DeleteBrandRequestSchema: GenMessage<DeleteBrandRequest>;

/**
 * @generated from message product.v1.DeleteBrandResponse
 */
export declare type DeleteBrandResponse = Message<"product.v1.DeleteBrandResponse"> & {
};

/**
 * Describes the message product.v1.DeleteBrandResponse.
 * Use `create(DeleteBrandResponseSchema)` to create a new message.
 */
export declare const DeleteBrandResponseSchema: GenMessage<DeleteBrandResponse>;

