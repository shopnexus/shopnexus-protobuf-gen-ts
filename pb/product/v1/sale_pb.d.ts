// @generated by protoc-gen-es v2.2.3
// @generated from file product/v1/sale.proto (package product.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { PaginationRequest, PaginationResponse } from "../../common/pagination_pb";

/**
 * Describes the file product/v1/sale.proto.
 */
export declare const file_product_v1_sale: GenFile;

/**
 * SALE ENTITY
 *
 * @generated from message product.v1.SaleEntity
 */
export declare type SaleEntity = Message<"product.v1.SaleEntity"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: optional string tag = 2;
   */
  tag?: string;

  /**
   * @generated from field: optional int64 product_model_id = 3;
   */
  productModelId?: bigint;

  /**
   * @generated from field: optional int64 brand_id = 4;
   */
  brandId?: bigint;

  /**
   * @generated from field: int64 date_started = 5;
   */
  dateStarted: bigint;

  /**
   * @generated from field: optional int64 date_ended = 6;
   */
  dateEnded?: bigint;

  /**
   * @generated from field: int64 quantity = 7;
   */
  quantity: bigint;

  /**
   * @generated from field: int64 used = 8;
   */
  used: bigint;

  /**
   * @generated from field: bool is_active = 9;
   */
  isActive: boolean;

  /**
   * @generated from field: optional int32 discount_percent = 10;
   */
  discountPercent?: number;

  /**
   * @generated from field: optional int64 discount_price = 11;
   */
  discountPrice?: bigint;
};

/**
 * Describes the message product.v1.SaleEntity.
 * Use `create(SaleEntitySchema)` to create a new message.
 */
export declare const SaleEntitySchema: GenMessage<SaleEntity>;

/**
 * @generated from message product.v1.GetSaleRequest
 */
export declare type GetSaleRequest = Message<"product.v1.GetSaleRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message product.v1.GetSaleRequest.
 * Use `create(GetSaleRequestSchema)` to create a new message.
 */
export declare const GetSaleRequestSchema: GenMessage<GetSaleRequest>;

/**
 * @generated from message product.v1.GetSaleResponse
 */
export declare type GetSaleResponse = Message<"product.v1.GetSaleResponse"> & {
  /**
   * @generated from field: product.v1.SaleEntity data = 1;
   */
  data?: SaleEntity;
};

/**
 * Describes the message product.v1.GetSaleResponse.
 * Use `create(GetSaleResponseSchema)` to create a new message.
 */
export declare const GetSaleResponseSchema: GenMessage<GetSaleResponse>;

/**
 * @generated from message product.v1.ListSalesRequest
 */
export declare type ListSalesRequest = Message<"product.v1.ListSalesRequest"> & {
  /**
   * @generated from field: common.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: optional string tag = 2;
   */
  tag?: string;

  /**
   * @generated from field: optional int64 product_model_id = 3;
   */
  productModelId?: bigint;

  /**
   * @generated from field: optional int64 brand_id = 4;
   */
  brandId?: bigint;

  /**
   * @generated from field: optional int64 date_started_from = 5;
   */
  dateStartedFrom?: bigint;

  /**
   * @generated from field: optional int64 date_started_to = 6;
   */
  dateStartedTo?: bigint;

  /**
   * @generated from field: optional int64 date_ended_from = 7;
   */
  dateEndedFrom?: bigint;

  /**
   * @generated from field: optional int64 date_ended_to = 8;
   */
  dateEndedTo?: bigint;

  /**
   * @generated from field: optional bool is_active = 9;
   */
  isActive?: boolean;
};

/**
 * Describes the message product.v1.ListSalesRequest.
 * Use `create(ListSalesRequestSchema)` to create a new message.
 */
export declare const ListSalesRequestSchema: GenMessage<ListSalesRequest>;

/**
 * @generated from message product.v1.ListSalesResponse
 */
export declare type ListSalesResponse = Message<"product.v1.ListSalesResponse"> & {
  /**
   * @generated from field: repeated product.v1.SaleEntity data = 1;
   */
  data: SaleEntity[];

  /**
   * @generated from field: common.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message product.v1.ListSalesResponse.
 * Use `create(ListSalesResponseSchema)` to create a new message.
 */
export declare const ListSalesResponseSchema: GenMessage<ListSalesResponse>;

/**
 * @generated from message product.v1.CreateSaleRequest
 */
export declare type CreateSaleRequest = Message<"product.v1.CreateSaleRequest"> & {
  /**
   * @generated from field: optional string tag = 1;
   */
  tag?: string;

  /**
   * @generated from field: optional int64 product_model_id = 2;
   */
  productModelId?: bigint;

  /**
   * @generated from field: optional int64 brand_id = 3;
   */
  brandId?: bigint;

  /**
   * @generated from field: int64 date_started = 4;
   */
  dateStarted: bigint;

  /**
   * @generated from field: optional int64 date_ended = 5;
   */
  dateEnded?: bigint;

  /**
   * @generated from field: int64 quantity = 6;
   */
  quantity: bigint;

  /**
   * @generated from field: int64 used = 7;
   */
  used: bigint;

  /**
   * @generated from field: bool is_active = 8;
   */
  isActive: boolean;

  /**
   * @generated from field: optional int32 discount_percent = 9;
   */
  discountPercent?: number;

  /**
   * @generated from field: optional int64 discount_price = 10;
   */
  discountPrice?: bigint;
};

/**
 * Describes the message product.v1.CreateSaleRequest.
 * Use `create(CreateSaleRequestSchema)` to create a new message.
 */
export declare const CreateSaleRequestSchema: GenMessage<CreateSaleRequest>;

/**
 * @generated from message product.v1.CreateSaleResponse
 */
export declare type CreateSaleResponse = Message<"product.v1.CreateSaleResponse"> & {
  /**
   * @generated from field: product.v1.SaleEntity data = 1;
   */
  data?: SaleEntity;
};

/**
 * Describes the message product.v1.CreateSaleResponse.
 * Use `create(CreateSaleResponseSchema)` to create a new message.
 */
export declare const CreateSaleResponseSchema: GenMessage<CreateSaleResponse>;

/**
 * @generated from message product.v1.UpdateSaleRequest
 */
export declare type UpdateSaleRequest = Message<"product.v1.UpdateSaleRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: optional string tag = 2;
   */
  tag?: string;

  /**
   * @generated from field: optional int64 product_model_id = 3;
   */
  productModelId?: bigint;

  /**
   * @generated from field: optional int64 brand_id = 4;
   */
  brandId?: bigint;

  /**
   * @generated from field: optional int64 date_started = 5;
   */
  dateStarted?: bigint;

  /**
   * @generated from field: optional int64 date_ended = 6;
   */
  dateEnded?: bigint;

  /**
   * @generated from field: optional int64 quantity = 7;
   */
  quantity?: bigint;

  /**
   * @generated from field: optional int64 used = 8;
   */
  used?: bigint;

  /**
   * @generated from field: optional bool is_active = 9;
   */
  isActive?: boolean;

  /**
   * @generated from field: optional int32 discount_percent = 10;
   */
  discountPercent?: number;

  /**
   * @generated from field: optional int64 discount_price = 11;
   */
  discountPrice?: bigint;
};

/**
 * Describes the message product.v1.UpdateSaleRequest.
 * Use `create(UpdateSaleRequestSchema)` to create a new message.
 */
export declare const UpdateSaleRequestSchema: GenMessage<UpdateSaleRequest>;

/**
 * @generated from message product.v1.UpdateSaleResponse
 */
export declare type UpdateSaleResponse = Message<"product.v1.UpdateSaleResponse"> & {
};

/**
 * Describes the message product.v1.UpdateSaleResponse.
 * Use `create(UpdateSaleResponseSchema)` to create a new message.
 */
export declare const UpdateSaleResponseSchema: GenMessage<UpdateSaleResponse>;

/**
 * @generated from message product.v1.DeleteSaleRequest
 */
export declare type DeleteSaleRequest = Message<"product.v1.DeleteSaleRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message product.v1.DeleteSaleRequest.
 * Use `create(DeleteSaleRequestSchema)` to create a new message.
 */
export declare const DeleteSaleRequestSchema: GenMessage<DeleteSaleRequest>;

/**
 * @generated from message product.v1.DeleteSaleResponse
 */
export declare type DeleteSaleResponse = Message<"product.v1.DeleteSaleResponse"> & {
};

/**
 * Describes the message product.v1.DeleteSaleResponse.
 * Use `create(DeleteSaleResponseSchema)` to create a new message.
 */
export declare const DeleteSaleResponseSchema: GenMessage<DeleteSaleResponse>;

