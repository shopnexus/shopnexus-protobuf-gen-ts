// @generated by protoc-gen-es v2.2.3
// @generated from file payment/v1/refund.proto (package payment.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Status } from "../../common/status_pb";
import type { PaginationRequest, PaginationResponse } from "../../common/pagination_pb";

/**
 * Describes the file payment/v1/refund.proto.
 */
export declare const file_payment_v1_refund: GenFile;

/**
 * @generated from message payment.v1.GetRefundRequest
 */
export declare type GetRefundRequest = Message<"payment.v1.GetRefundRequest"> & {
  /**
   * @generated from field: string refund_id = 1;
   */
  refundId: string;
};

/**
 * Describes the message payment.v1.GetRefundRequest.
 * Use `create(GetRefundRequestSchema)` to create a new message.
 */
export declare const GetRefundRequestSchema: GenMessage<GetRefundRequest>;

/**
 * @generated from message payment.v1.GetRefundResponse
 */
export declare type GetRefundResponse = Message<"payment.v1.GetRefundResponse"> & {
  /**
   * @generated from field: string refund_id = 1;
   */
  refundId: string;

  /**
   * @generated from field: string product_serial_id = 2;
   */
  productSerialId: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: common.Status status = 4;
   */
  status: Status;

  /**
   * @generated from field: payment.v1.RefundMethod refund_method = 5;
   */
  refundMethod: RefundMethod;
};

/**
 * Describes the message payment.v1.GetRefundResponse.
 * Use `create(GetRefundResponseSchema)` to create a new message.
 */
export declare const GetRefundResponseSchema: GenMessage<GetRefundResponse>;

/**
 * @generated from message payment.v1.ListRefundsRequest
 */
export declare type ListRefundsRequest = Message<"payment.v1.ListRefundsRequest"> & {
  /**
   * @generated from field: common.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: optional string product_serial_id = 2;
   */
  productSerialId?: string;

  /**
   * @generated from field: optional common.Status status = 3;
   */
  status?: Status;

  /**
   * @generated from field: optional payment.v1.RefundMethod refund_method = 4;
   */
  refundMethod?: RefundMethod;

  /**
   * @generated from field: optional int64 date_created_from = 5;
   */
  dateCreatedFrom?: bigint;

  /**
   * @generated from field: optional int64 date_created_to = 6;
   */
  dateCreatedTo?: bigint;
};

/**
 * Describes the message payment.v1.ListRefundsRequest.
 * Use `create(ListRefundsRequestSchema)` to create a new message.
 */
export declare const ListRefundsRequestSchema: GenMessage<ListRefundsRequest>;

/**
 * @generated from message payment.v1.ListRefundsResponse
 */
export declare type ListRefundsResponse = Message<"payment.v1.ListRefundsResponse"> & {
  /**
   * @generated from field: common.PaginationResponse pagination = 1;
   */
  pagination?: PaginationResponse;

  /**
   * @generated from field: repeated payment.v1.GetRefundResponse refunds = 2;
   */
  refunds: GetRefundResponse[];
};

/**
 * Describes the message payment.v1.ListRefundsResponse.
 * Use `create(ListRefundsResponseSchema)` to create a new message.
 */
export declare const ListRefundsResponseSchema: GenMessage<ListRefundsResponse>;

/**
 * @generated from message payment.v1.CreateRefundRequest
 */
export declare type CreateRefundRequest = Message<"payment.v1.CreateRefundRequest"> & {
  /**
   * @generated from field: int64 payment_id = 1;
   */
  paymentId: bigint;

  /**
   * @generated from field: payment.v1.RefundMethod method = 2;
   */
  method: RefundMethod;

  /**
   * @generated from field: string reason = 3;
   */
  reason: string;

  /**
   * @generated from field: optional string address = 4;
   */
  address?: string;
};

/**
 * Describes the message payment.v1.CreateRefundRequest.
 * Use `create(CreateRefundRequestSchema)` to create a new message.
 */
export declare const CreateRefundRequestSchema: GenMessage<CreateRefundRequest>;

/**
 * @generated from message payment.v1.CreateRefundResponse
 */
export declare type CreateRefundResponse = Message<"payment.v1.CreateRefundResponse"> & {
  /**
   * @generated from field: string refund_id = 1;
   */
  refundId: string;
};

/**
 * Describes the message payment.v1.CreateRefundResponse.
 * Use `create(CreateRefundResponseSchema)` to create a new message.
 */
export declare const CreateRefundResponseSchema: GenMessage<CreateRefundResponse>;

/**
 * @generated from message payment.v1.UpdateRefundRequest
 */
export declare type UpdateRefundRequest = Message<"payment.v1.UpdateRefundRequest"> & {
  /**
   * @generated from field: string refund_id = 1;
   */
  refundId: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: repeated bytes images = 3;
   */
  images: Uint8Array[];

  /**
   * @generated from field: repeated bytes videos = 4;
   */
  videos: Uint8Array[];

  /**
   * @generated from field: payment.v1.RefundMethod refund_method = 5;
   */
  refundMethod: RefundMethod;
};

/**
 * Describes the message payment.v1.UpdateRefundRequest.
 * Use `create(UpdateRefundRequestSchema)` to create a new message.
 */
export declare const UpdateRefundRequestSchema: GenMessage<UpdateRefundRequest>;

/**
 * @generated from message payment.v1.UpdateRefundResponse
 */
export declare type UpdateRefundResponse = Message<"payment.v1.UpdateRefundResponse"> & {
  /**
   * @generated from field: string refund_id = 1;
   */
  refundId: string;
};

/**
 * Describes the message payment.v1.UpdateRefundResponse.
 * Use `create(UpdateRefundResponseSchema)` to create a new message.
 */
export declare const UpdateRefundResponseSchema: GenMessage<UpdateRefundResponse>;

/**
 * @generated from message payment.v1.CancelRefundRequest
 */
export declare type CancelRefundRequest = Message<"payment.v1.CancelRefundRequest"> & {
  /**
   * @generated from field: string refund_id = 1;
   */
  refundId: string;
};

/**
 * Describes the message payment.v1.CancelRefundRequest.
 * Use `create(CancelRefundRequestSchema)` to create a new message.
 */
export declare const CancelRefundRequestSchema: GenMessage<CancelRefundRequest>;

/**
 * @generated from message payment.v1.CancelRefundResponse
 */
export declare type CancelRefundResponse = Message<"payment.v1.CancelRefundResponse"> & {
};

/**
 * Describes the message payment.v1.CancelRefundResponse.
 * Use `create(CancelRefundResponseSchema)` to create a new message.
 */
export declare const CancelRefundResponseSchema: GenMessage<CancelRefundResponse>;

/**
 * @generated from enum payment.v1.RefundMethod
 */
export enum RefundMethod {
  /**
   * @generated from enum value: REFUND_METHOD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: REFUND_METHOD_PICK_UP = 1;
   */
  PICK_UP = 1,

  /**
   * @generated from enum value: REFUND_METHOD_DROP_OFF = 2;
   */
  DROP_OFF = 2,
}

/**
 * Describes the enum payment.v1.RefundMethod.
 */
export declare const RefundMethodSchema: GenEnum<RefundMethod>;

